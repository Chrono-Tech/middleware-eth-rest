
module.exports.id = '7b7c34ab.610cdc';

const _ = require('lodash'),
  config = require('../config');

/**
 * @description flow 7b7c34ab.610cdc update
 * @param done
 */
   

module.exports.up = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.update({"path":"7b7c34ab.610cdc","type":"flows"}, {
    $set: {"path":"7b7c34ab.610cdc","body":[{"id":"769db984.cb9a18","type":"http response","z":"7b7c34ab.610cdc","name":"","statusCode":"","x":950,"y":100,"wires":[]},{"id":"5635109c.1e8a7","type":"http in","z":"7b7c34ab.610cdc","name":"block","url":"/block/:hash","method":"get","upload":false,"swaggerDoc":"","x":90,"y":100,"wires":[["212316da.1f100a"]]},{"id":"4d5848dc.948ab8","type":"function","z":"7b7c34ab.610cdc","name":"transform params","func":"const prefix = global.get('settings.mongo.collectionPrefix');\nconst _ = global.get('_');\n\n\nconst request = {};\n\nif(msg.req.params.hash.length >= 64){\n request._id = msg.req.params.hash;\n}else{\n    request.number = parseInt(msg.req.params.hash);\n}\n\nmsg.payload = { \n    model: `${prefix}Block`, \n    request: request\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":100,"wires":[["4d519e9.24a296"]]},{"id":"eace4be3.5b6db8","type":"catch","z":"7b7c34ab.610cdc","name":"","scope":null,"x":287,"y":225,"wires":[["6bec5e34.b3669","6dceafd9.f15a7"]]},{"id":"9b2d8479.dc7bd8","type":"http response","z":"7b7c34ab.610cdc","name":"","statusCode":"","x":744,"y":226,"wires":[]},{"id":"6bec5e34.b3669","type":"function","z":"7b7c34ab.610cdc","name":"transform","func":"\nlet factories = global.get(\"factories\"); \n\nmsg.payload = factories.messages.generic.fail;\n\nif (msg.statusCode == '401' || msg.statusCode == '400')\n   msg.payload = factories.messages.generic.failAuth;\n    \nreturn msg;","outputs":1,"noerr":0,"x":528,"y":225,"wires":[["9b2d8479.dc7bd8"]]},{"id":"4d519e9.24a296","type":"mongo","z":"7b7c34ab.610cdc","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":650,"y":100,"wires":[["eb9a0a40.b02d48"]]},{"id":"6dceafd9.f15a7","type":"debug","z":"7b7c34ab.610cdc","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","x":500,"y":340,"wires":[]},{"id":"eb9a0a40.b02d48","type":"function","z":"7b7c34ab.610cdc","name":"","func":"\nmsg.payload = msg.payload[0] || null;\n\nif(!msg.payload)\n    return msg;\n    \nmsg.payload = {\n    hash: msg.payload._id,\n    miner: msg.payload.miner,\n    number: msg.payload.number,\n    timestamp: msg.payload.timestamp,\n    totalTxFee: msg.payload.totalTxFee,\n    uncleAmount: msg.payload.uncleAmount \n};    \n\n\nreturn msg;","outputs":1,"noerr":0,"x":820,"y":100,"wires":[["769db984.cb9a18"]]},{"id":"212316da.1f100a","type":"laborx_auth","z":"7b7c34ab.610cdc","name":"laborx_auth","configprovider":"1","dbAlias":"accounts","providerpath":"http://localhost:3001","x":250,"y":100,"wires":[["4d5848dc.948ab8"]]},{"id":"3b39b0a6.06b3b","type":"http in","z":"7b7c34ab.610cdc","name":"blocks","url":"/blocks/history","method":"get","upload":false,"swaggerDoc":"","x":90,"y":520,"wires":[["3a026c44.ebc5c4"]]},{"id":"3a026c44.ebc5c4","type":"laborx_auth","z":"7b7c34ab.610cdc","name":"laborx_auth","configprovider":"1","dbAlias":"accounts","providerpath":"http://localhost:3001","x":270,"y":520,"wires":[["eadfb194.cacb5"]]},{"id":"eadfb194.cacb5","type":"function","z":"7b7c34ab.610cdc","name":"","func":"const prefix = global.get('settings.mongo.collectionPrefix');\n\nconst limit = parseInt(msg.req.query.limit) || 10;\nconst skip = parseInt(msg.req.query.skip) || 0;\n\nmsg.payload = { \n    model: `${prefix}Block`, \n    request: {},\n    options: {\n      sort: {number: -1},\n      limit: limit > 20 ? 20 : limit,\n      skip\n  }\n};\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":520,"wires":[["89a986fa.32dcf8"]]},{"id":"9fe01557.ac7ca8","type":"http response","z":"7b7c34ab.610cdc","name":"","statusCode":"","x":890,"y":520,"wires":[]},{"id":"89a986fa.32dcf8","type":"mongo","z":"7b7c34ab.610cdc","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":590,"y":520,"wires":[["b5df2f47.7790a","5c754cc0.ab8184"]]},{"id":"b5df2f47.7790a","type":"function","z":"7b7c34ab.610cdc","name":"","func":"\nif(!msg.payload.length)\n    return msg;\n    \nmsg.payload = msg.payload.map(item=>({\n    hash: item._id,\n    miner: item.miner,\n    number: item.number,\n    timestamp: item.timestamp,\n    totalTxFee: item.totalTxFee,\n    uncleAmount: item.uncleAmount     \n}))\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":750,"y":520,"wires":[["9fe01557.ac7ca8"]]},{"id":"5c754cc0.ab8184","type":"debug","z":"7b7c34ab.610cdc","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":730,"y":460,"wires":[]}]}
  }, {upsert: true}, done);
};

module.exports.down = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.remove({"path":"7b7c34ab.610cdc","type":"flows"}, done);
};
