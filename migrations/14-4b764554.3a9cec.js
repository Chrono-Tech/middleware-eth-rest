
module.exports.id = '14.4b764554.3a9cec';

const _ = require('lodash'),
  config = require('../config');

/**
 * @description flow 4b764554.3a9cec update
 * @param done
 */
   

module.exports.up = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.update({"path":"4b764554.3a9cec","type":"flows"}, {
    $set: {"path":"4b764554.3a9cec","body":[{"id":"92971ba0.f46588","type":"http in","z":"4b764554.3a9cec","name":"get issues","url":"/events/mint/issues","method":"get","upload":false,"swaggerDoc":"","x":100,"y":500,"wires":[["4f553410.2de05c"]]},{"id":"b480b4fe.002428","type":"function","z":"4b764554.3a9cec","name":"transform params","func":"const _ = global.get('_');\n\n\nconst issueCriteria = _.chain(msg.payload.criteria)\n.toPairs()\n.filter(pair=>pair[0].includes('issue.'))\n.map(pair=>[[pair[0].replace('issue.', '')], pair[1]])\n.fromPairs()\n.value();\n\n\nconst revokeCriteria = _.chain(msg.payload.criteria)\n.toPairs()\n.filter(pair=>pair[0].includes('revoke.'))\n.map(pair=>[[pair[0].replace('revoke.', '')], pair[1]])\n.fromPairs()\n.value();\n\nmsg.payload = [\n    {\n        model: 'Issue',\n        request: issueCriteria\n    }, \n    {\n        model: 'Revoke',\n        request: revokeCriteria\n    }\n    ];\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":500,"wires":[["11a6009b.7634ff"]]},{"id":"3ec6d68b.1200fa","type":"http response","z":"4b764554.3a9cec","name":"","statusCode":"","headers":{},"x":1630,"y":500,"wires":[]},{"id":"24152db7.a29162","type":"mongo","z":"4b764554.3a9cec","model":"","request":"","options":"","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":970,"y":500,"wires":[["6be91a9.2e491e4"]]},{"id":"81608156.a74c9","type":"catch","z":"4b764554.3a9cec","name":"","scope":null,"x":470,"y":693.5,"wires":[["8f8c1bb7.feb598","aa1840d1.e7835"]]},{"id":"2c2f926b.890f1e","type":"http response","z":"4b764554.3a9cec","name":"","statusCode":"","x":927,"y":694.5,"wires":[]},{"id":"8f8c1bb7.feb598","type":"function","z":"4b764554.3a9cec","name":"transform","func":"\nlet factories = global.get(\"factories\"); \n\nmsg.payload = factories.messages.generic.fail;\n    \nreturn msg;","outputs":1,"noerr":0,"x":711,"y":693.5,"wires":[["2c2f926b.890f1e"]]},{"id":"11a6009b.7634ff","type":"split","z":"4b764554.3a9cec","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":690,"y":500,"wires":[["88b32113.3569c"]]},{"id":"eb6b90ac.23cc9","type":"join","z":"4b764554.3a9cec","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","x":1290,"y":500,"wires":[["1fa0d0ba.8aea8f"]]},{"id":"6be91a9.2e491e4","type":"function","z":"4b764554.3a9cec","name":"","func":"\n\nmsg.payload = {\n  type: msg.type,\n  items: msg.payload\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1124,"y":500,"wires":[["eb6b90ac.23cc9"]]},{"id":"88b32113.3569c","type":"function","z":"4b764554.3a9cec","name":"","func":"\nmsg.type = msg.payload.model;\n\n\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":500,"wires":[["24152db7.a29162"]]},{"id":"1fa0d0ba.8aea8f","type":"function","z":"4b764554.3a9cec","name":"","func":"const _ = global.get('_');\n\n\nmsg.payload = _.chain(msg.payload)\n.map(set=> \n    set.items.map(item=>\n    _.merge(item, {type: set.type})\n    )\n)\n.flattenDeep()\n.orderBy('created', 'desc');\n\nreturn msg;","outputs":1,"noerr":0,"x":1450,"y":500,"wires":[["3ec6d68b.1200fa"]]},{"id":"4f553410.2de05c","type":"query-to-mongo","z":"4b764554.3a9cec","request_type":"0","name":"query-to-mongo","x":280,"y":500,"wires":[["b480b4fe.002428"]]},{"id":"aa1840d1.e7835","type":"debug","z":"4b764554.3a9cec","name":"","active":true,"console":"false","complete":"error","x":692,"y":802,"wires":[]},{"id":"946713.e2b5c8f","type":"http in","z":"4b764554.3a9cec","name":"get assets","url":"/events/mint/assets","method":"get","upload":false,"swaggerDoc":"","x":100,"y":180,"wires":[["2b96ec4e.366e34"]]},{"id":"2b96ec4e.366e34","type":"query-to-mongo","z":"4b764554.3a9cec","request_type":"0","name":"query-to-mongo","x":280,"y":180,"wires":[["d4f8502c.83fb3"]]},{"id":"d4f8502c.83fb3","type":"function","z":"4b764554.3a9cec","name":"transform params","func":"const _ = global.get('_');\n\nmsg.account= msg.payload.criteria.account;\nmsg.payload = \n    {\n        model: 'OwnershipChange',\n        request: {\n            $or:[\n                {to: msg.payload.criteria.account},\n                 {from: msg.payload.criteria.account},\n                ]\n        },\n    };\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":180,"wires":[["99295163.bed87"]]},{"id":"99295163.bed87","type":"mongo","z":"4b764554.3a9cec","model":"","request":"","options":"","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":720,"y":180,"wires":[["1a10b17a.8c7d0f"]]},{"id":"f33daddf.ba7d6","type":"http response","z":"4b764554.3a9cec","name":"","statusCode":"","headers":{},"x":1190,"y":260,"wires":[]},{"id":"1a10b17a.8c7d0f","type":"function","z":"4b764554.3a9cec","name":"","func":"const _ = global.get('_');\n\nlet items = {};\nconst zero = \"0x0000000000000000000000000000000000000000\";\n\nmsg.payload = msg.payload.sort((a, b) => {\n    if (a.created === b.created) {\n      return a.from !== zero\n    }\n    return a.created > b.created\n  })\n  .map((item) => {\n    items[item.symbol] = item\n  });\n\nObject.keys(items)\n  .map((key) => {\n    const item = items[key]\n    if (item.to !== msg.account) {\n        delete items[key]\n    }\n  });\n\nmsg.symbols = [...Object.keys(items)];\nreturn msg;","outputs":1,"noerr":0,"x":910,"y":180,"wires":[["c633bb3f.a0f978"]]},{"id":"c633bb3f.a0f978","type":"function","z":"4b764554.3a9cec","name":"transform params","func":"msg.payload = [{\n    model: 'AssetCreated',\n    request: {\n      symbol: {\n        $in: msg.symbols,\n      }\n    },\n  },\n  {\n    model: 'Issue',\n    request: {\n      symbol: {\n        $in: msg.symbols,\n      }\n    }\n  },\n  {\n    model: 'Revoke',\n    request: {\n      symbol: {\n        $in: msg.symbols,\n      }\n    }\n  },\n];\n\nreturn msg","outputs":1,"noerr":0,"x":130,"y":260,"wires":[["c32dc905.e5d7f8"]]},{"id":"fb9b8be.c636b78","type":"mongo","z":"4b764554.3a9cec","model":"","request":"","options":"","name":"mongo","mode":"1","requestType":"0","dbAlias":"primary.data","x":600,"y":260,"wires":[["ad535122.b7cce"]]},{"id":"c32dc905.e5d7f8","type":"split","z":"4b764554.3a9cec","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":310,"y":260,"wires":[["fa8a306d.00858"]]},{"id":"fa8a306d.00858","type":"function","z":"4b764554.3a9cec","name":"","func":"\nmsg.type = msg.payload.model;\n\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":260,"wires":[["fb9b8be.c636b78"]]},{"id":"ad535122.b7cce","type":"function","z":"4b764554.3a9cec","name":"","func":"\n\nmsg.payload = {\n  type: msg.type,\n  items: msg.payload\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":750,"y":260,"wires":[["7ff61fa4.e5359"]]},{"id":"7ff61fa4.e5359","type":"join","z":"4b764554.3a9cec","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":"false","timeout":"","count":"","x":890,"y":260,"wires":[["90dca282.08171"]]},{"id":"90dca282.08171","type":"function","z":"4b764554.3a9cec","name":"","func":"const _ = global.get('_');\n\nlet issues = {}\nconst res = _.chain([msg.payload[1], msg.payload[2]])\n  .map(set =>\n    set.items.map(item =>\n      _.merge(item, {\n        type: set.type\n      })\n    )\n  )\n  .flattenDeep()\n  .orderBy('created', 'asc')\n  .value()\n  .map((item) => {\n    if (!issues[item.symbol]) {\n      issues[item.symbol] = 0;\n    }\n    if (item.type === 'Issue') {\n      issues[item.symbol] += item.value;\n    } else {\n      issues[item.symbol] -= item.value;\n    }\n  });\n\nmsg.payload = msg.payload[0].items // assets\n  .map((item) => {\n    item.totalSupply = issues[item.symbol] || 0;\n    return item;\n  });\n\nreturn msg;","outputs":1,"noerr":0,"x":1030,"y":260,"wires":[["f33daddf.ba7d6"]]}]}
  }, {upsert: true}, done);
};

module.exports.down = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.remove({"path":"4b764554.3a9cec","type":"flows"}, done);
};
