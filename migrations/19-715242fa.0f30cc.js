
module.exports.id = '19.715242fa.0f30cc';

const _ = require('lodash'),
  config = require('../config');

/**
 * @description flow 715242fa.0f30cc update
 * @param done
 */
   

module.exports.up = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.update({'path':'715242fa.0f30cc','type':'flows'}, {
    $set: {'path':'715242fa.0f30cc','body':[{'id':'7b412e0e.e9b61','type':'http in','z':'715242fa.0f30cc','name':'get issues','url':'/events/mint/issues','method':'get','upload':false,'swaggerDoc':'','x':100,'y':540,'wires':[['31fe5a0d.fc2716']]},{'id':'98a1846b.a1db58','type':'function','z':'715242fa.0f30cc','name':'transform params','func':'const _ = global.get(\'_\');\n\n\nconst issueCriteria = _.chain(msg.payload.criteria)\n.toPairs()\n.filter(pair=>pair[0].includes(\'issue.\'))\n.map(pair=>[[pair[0].replace(\'issue.\', \'\')], pair[1]])\n.fromPairs()\n.value();\n\n\nconst revokeCriteria = _.chain(msg.payload.criteria)\n.toPairs()\n.filter(pair=>pair[0].includes(\'revoke.\'))\n.map(pair=>[[pair[0].replace(\'revoke.\', \'\')], pair[1]])\n.fromPairs()\n.value();\n\nmsg.payload = [\n    {\n        model: \'Issue\',\n        request: issueCriteria\n    }, \n    {\n        model: \'Revoke\',\n        request: revokeCriteria\n    }\n    ];\n\nreturn msg;','outputs':1,'noerr':0,'x':490,'y':540,'wires':[['dc2a0657.2ae978']]},{'id':'60300f7d.e6d45','type':'http response','z':'715242fa.0f30cc','name':'','statusCode':'','headers':{},'x':1630,'y':540,'wires':[]},{'id':'c26d7e10.8f947','type':'mongo','z':'715242fa.0f30cc','model':'','request':'','options':'','name':'mongo','mode':'1','requestType':'0','dbAlias':'primary.data','x':970,'y':540,'wires':[['68966b56.204804']]},{'id':'f46c40e3.8ad6d','type':'catch','z':'715242fa.0f30cc','name':'','scope':null,'x':470,'y':733.5,'wires':[['6073c876.baaab8','cdf6768f.642c68']]},{'id':'9b143b36.9be928','type':'http response','z':'715242fa.0f30cc','name':'','statusCode':'','x':927,'y':734.5,'wires':[]},{'id':'6073c876.baaab8','type':'function','z':'715242fa.0f30cc','name':'transform','func':'\nlet factories = global.get("factories"); \n\nmsg.payload = factories.messages.generic.fail;\n    \nreturn msg;','outputs':1,'noerr':0,'x':711,'y':733.5,'wires':[['9b143b36.9be928']]},{'id':'dc2a0657.2ae978','type':'split','z':'715242fa.0f30cc','name':'','splt':'\\n','spltType':'str','arraySplt':1,'arraySpltType':'len','stream':false,'addname':'','x':690,'y':540,'wires':[['55728a2a.1d7974']]},{'id':'e8c2852d.56c768','type':'join','z':'715242fa.0f30cc','name':'','mode':'auto','build':'string','property':'payload','propertyType':'msg','key':'topic','joiner':'\\n','joinerType':'str','accumulate':'false','timeout':'','count':'','x':1290,'y':540,'wires':[['3cae3895.3bc0f8']]},{'id':'68966b56.204804','type':'function','z':'715242fa.0f30cc','name':'','func':'\n\nmsg.payload = {\n  type: msg.type,\n  items: msg.payload\n};\n\nreturn msg;','outputs':1,'noerr':0,'x':1124,'y':540,'wires':[['e8c2852d.56c768']]},{'id':'55728a2a.1d7974','type':'function','z':'715242fa.0f30cc','name':'','func':'\nmsg.type = msg.payload.model;\n\n\nreturn msg;','outputs':1,'noerr':0,'x':830,'y':540,'wires':[['c26d7e10.8f947']]},{'id':'3cae3895.3bc0f8','type':'function','z':'715242fa.0f30cc','name':'','func':'const _ = global.get(\'_\');\n\n\nmsg.payload = _.chain(msg.payload)\n.map(set=> \n    set.items.map(item=>\n    _.merge(item, {type: set.type})\n    )\n)\n.flattenDeep()\n.orderBy(\'created\', \'desc\');\n\nreturn msg;','outputs':1,'noerr':0,'x':1450,'y':540,'wires':[['60300f7d.e6d45']]},{'id':'31fe5a0d.fc2716','type':'query-to-mongo','z':'715242fa.0f30cc','request_type':'0','name':'query-to-mongo','x':280,'y':540,'wires':[['98a1846b.a1db58']]},{'id':'cdf6768f.642c68','type':'debug','z':'715242fa.0f30cc','name':'','active':true,'console':'false','complete':'error','x':692,'y':842,'wires':[]},{'id':'8f522c74.c65e8','type':'http in','z':'715242fa.0f30cc','name':'get assets','url':'/events/mint/assets','method':'get','upload':false,'swaggerDoc':'','x':100,'y':220,'wires':[['cfc34857.b0b8e8']]},{'id':'cfc34857.b0b8e8','type':'query-to-mongo','z':'715242fa.0f30cc','request_type':'0','name':'query-to-mongo','x':280,'y':220,'wires':[['5f6a7f31.1d596']]},{'id':'5f6a7f31.1d596','type':'function','z':'715242fa.0f30cc','name':'transform params','func':'const _ = global.get(\'_\');\n\nmsg.account= msg.payload.criteria.account;\nmsg.payload = \n    {\n        model: \'OwnershipChange\',\n        request: {\n            $or:[\n                {to: msg.payload.criteria.account},\n                 {from: msg.payload.criteria.account},\n                ]\n        },\n    };\n\nreturn msg;','outputs':1,'noerr':0,'x':490,'y':220,'wires':[['823fd549.c08e28']]},{'id':'823fd549.c08e28','type':'mongo','z':'715242fa.0f30cc','model':'','request':'','options':'','name':'mongo','mode':'1','requestType':'0','dbAlias':'primary.data','x':720,'y':220,'wires':[['83cd4084.aae6c']]},{'id':'f1ecfc3d.7ae73','type':'http response','z':'715242fa.0f30cc','name':'','statusCode':'','headers':{},'x':1190,'y':300,'wires':[]},{'id':'83cd4084.aae6c','type':'function','z':'715242fa.0f30cc','name':'','func':'const _ = global.get(\'_\');\n\nlet items = {};\nconst zero = "0x0000000000000000000000000000000000000000";\n\nmsg.payload = msg.payload.sort((a, b) => {\n    if (a.created === b.created) {\n      return a.from !== zero\n    }\n    return a.created > b.created\n  })\n  .map((item) => {\n    items[item.symbol] = item\n  });\n\nObject.keys(items)\n  .map((key) => {\n    const item = items[key]\n    if (item.to !== msg.account) {\n        delete items[key]\n    }\n  });\n\nmsg.symbols = [...Object.keys(items)];\nreturn msg;','outputs':1,'noerr':0,'x':910,'y':220,'wires':[['62805f75.7d763']]},{'id':'62805f75.7d763','type':'function','z':'715242fa.0f30cc','name':'transform params','func':'msg.payload = [{\n    model: \'AssetCreated\',\n    request: {\n      symbol: {\n        $in: msg.symbols,\n      }\n    },\n  },\n  {\n    model: \'Issue\',\n    request: {\n      symbol: {\n        $in: msg.symbols,\n      }\n    }\n  },\n  {\n    model: \'Revoke\',\n    request: {\n      symbol: {\n        $in: msg.symbols,\n      }\n    }\n  },\n];\n\nreturn msg','outputs':1,'noerr':0,'x':130,'y':300,'wires':[['44753fe2.4fa88']]},{'id':'9c91b6f3.b2a928','type':'mongo','z':'715242fa.0f30cc','model':'','request':'','options':'','name':'mongo','mode':'1','requestType':'0','dbAlias':'primary.data','x':600,'y':300,'wires':[['4f99412a.a7545']]},{'id':'44753fe2.4fa88','type':'split','z':'715242fa.0f30cc','name':'','splt':'\\n','spltType':'str','arraySplt':1,'arraySpltType':'len','stream':false,'addname':'','x':310,'y':300,'wires':[['b05cca48.3bd478']]},{'id':'b05cca48.3bd478','type':'function','z':'715242fa.0f30cc','name':'','func':'\nmsg.type = msg.payload.model;\n\n\nreturn msg;','outputs':1,'noerr':0,'x':450,'y':300,'wires':[['9c91b6f3.b2a928']]},{'id':'4f99412a.a7545','type':'function','z':'715242fa.0f30cc','name':'','func':'\n\nmsg.payload = {\n  type: msg.type,\n  items: msg.payload\n};\n\nreturn msg;','outputs':1,'noerr':0,'x':750,'y':300,'wires':[['4c8337a2.065658']]},{'id':'4c8337a2.065658','type':'join','z':'715242fa.0f30cc','name':'','mode':'auto','build':'string','property':'payload','propertyType':'msg','key':'topic','joiner':'\\n','joinerType':'str','accumulate':'false','timeout':'','count':'','x':890,'y':300,'wires':[['5e0af959.c695f8']]},{'id':'5e0af959.c695f8','type':'function','z':'715242fa.0f30cc','name':'','func':'const _ = global.get(\'_\');\n\nlet issues = {}\nconst res = _.chain([msg.payload[1], msg.payload[2]])\n  .map(set =>\n    set.items.map(item =>\n      _.merge(item, {\n        type: set.type\n      })\n    )\n  )\n  .flattenDeep()\n  .orderBy(\'created\', \'asc\')\n  .value()\n  .map((item) => {\n    if (!issues[item.symbol]) {\n      issues[item.symbol] = 0;\n    }\n    if (item.type === \'Issue\') {\n      issues[item.symbol] += item.value;\n    } else {\n      issues[item.symbol] -= item.value;\n    }\n  });\n\nmsg.payload = msg.payload[0].items // assets\n  .map((item) => {\n    item.totalSupply = issues[item.symbol] || 0;\n    return item;\n  });\n\nreturn msg;','outputs':1,'noerr':0,'x':1030,'y':300,'wires':[['f1ecfc3d.7ae73']]}]}
  }, {upsert: true}, done);
};

module.exports.down = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.remove({'path':'715242fa.0f30cc','type':'flows'}, done);
};
